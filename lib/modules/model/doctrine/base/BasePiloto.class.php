<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Piloto', 'doctrine');

/**
 * BasePiloto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $first_name
 * @property string $last_name
 * @property integer $phone
 * @property string $direccion
 * @property string $email
 * @property string $licencia
 * @property string $dpi
 * @property string $cedula
 * @property date $fecha_nacimiento
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $created_by
 * @property Doctrine_Collection $AsignacionUnidadPiloto
 * 
 * @method integer             getId()                     Returns the current record's "id" value
 * @method string              getFirstName()              Returns the current record's "first_name" value
 * @method string              getLastName()               Returns the current record's "last_name" value
 * @method integer             getPhone()                  Returns the current record's "phone" value
 * @method string              getDireccion()              Returns the current record's "direccion" value
 * @method string              getEmail()                  Returns the current record's "email" value
 * @method string              getLicencia()               Returns the current record's "licencia" value
 * @method string              getDpi()                    Returns the current record's "dpi" value
 * @method string              getCedula()                 Returns the current record's "cedula" value
 * @method date                getFechaNacimiento()        Returns the current record's "fecha_nacimiento" value
 * @method timestamp           getCreatedAt()              Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()              Returns the current record's "updated_at" value
 * @method integer             getCreatedBy()              Returns the current record's "created_by" value
 * @method Doctrine_Collection getAsignacionUnidadPiloto() Returns the current record's "AsignacionUnidadPiloto" collection
 * @method Piloto              setId()                     Sets the current record's "id" value
 * @method Piloto              setFirstName()              Sets the current record's "first_name" value
 * @method Piloto              setLastName()               Sets the current record's "last_name" value
 * @method Piloto              setPhone()                  Sets the current record's "phone" value
 * @method Piloto              setDireccion()              Sets the current record's "direccion" value
 * @method Piloto              setEmail()                  Sets the current record's "email" value
 * @method Piloto              setLicencia()               Sets the current record's "licencia" value
 * @method Piloto              setDpi()                    Sets the current record's "dpi" value
 * @method Piloto              setCedula()                 Sets the current record's "cedula" value
 * @method Piloto              setFechaNacimiento()        Sets the current record's "fecha_nacimiento" value
 * @method Piloto              setCreatedAt()              Sets the current record's "created_at" value
 * @method Piloto              setUpdatedAt()              Sets the current record's "updated_at" value
 * @method Piloto              setCreatedBy()              Sets the current record's "created_by" value
 * @method Piloto              setAsignacionUnidadPiloto() Sets the current record's "AsignacionUnidadPiloto" collection
 * 
 * @package    sistem-taxi
 * @subpackage model
 * @author     Walter Rosales
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePiloto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('piloto');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('first_name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('last_name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('phone', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('direccion', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('email', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('licencia', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('dpi', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('cedula', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('fecha_nacimiento', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_by', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('AsignacionUnidadPiloto', array(
             'local' => 'id',
             'foreign' => 'id_piloto'));
    }
}
<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Constructor', 'doctrine');

/**
 * BaseConstructor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $email
 * @property string $phone
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Doctrine_Collection $ConstructorTownship
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method string              getName()                Returns the current record's "name" value
 * @method string              getEmail()               Returns the current record's "email" value
 * @method string              getPhone()               Returns the current record's "phone" value
 * @method timestamp           getCreatedAt()           Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()           Returns the current record's "updated_at" value
 * @method Doctrine_Collection getConstructorTownship() Returns the current record's "ConstructorTownship" collection
 * @method Constructor         setId()                  Sets the current record's "id" value
 * @method Constructor         setName()                Sets the current record's "name" value
 * @method Constructor         setEmail()               Sets the current record's "email" value
 * @method Constructor         setPhone()               Sets the current record's "phone" value
 * @method Constructor         setCreatedAt()           Sets the current record's "created_at" value
 * @method Constructor         setUpdatedAt()           Sets the current record's "updated_at" value
 * @method Constructor         setConstructorTownship() Sets the current record's "ConstructorTownship" collection
 * 
 * @package    sistem-taxi
 * @subpackage model
 * @author     Walter Rosales
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseConstructor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('constructor');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('phone', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ConstructorTownship', array(
             'local' => 'id',
             'foreign' => 'constructor_id'));
    }
}
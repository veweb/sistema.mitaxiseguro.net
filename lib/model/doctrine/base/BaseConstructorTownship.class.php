<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ConstructorTownship', 'doctrine');

/**
 * BaseConstructorTownship
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $constructor_id
 * @property integer $township_id
 * @property integer $flag
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Constructor $Constructor
 * @property Township $Township
 * @property Doctrine_Collection $ConstructorOrder
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method integer             getConstructorId()    Returns the current record's "constructor_id" value
 * @method integer             getTownshipId()       Returns the current record's "township_id" value
 * @method integer             getFlag()             Returns the current record's "flag" value
 * @method timestamp           getCreatedAt()        Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()        Returns the current record's "updated_at" value
 * @method Constructor         getConstructor()      Returns the current record's "Constructor" value
 * @method Township            getTownship()         Returns the current record's "Township" value
 * @method Doctrine_Collection getConstructorOrder() Returns the current record's "ConstructorOrder" collection
 * @method ConstructorTownship setId()               Sets the current record's "id" value
 * @method ConstructorTownship setConstructorId()    Sets the current record's "constructor_id" value
 * @method ConstructorTownship setTownshipId()       Sets the current record's "township_id" value
 * @method ConstructorTownship setFlag()             Sets the current record's "flag" value
 * @method ConstructorTownship setCreatedAt()        Sets the current record's "created_at" value
 * @method ConstructorTownship setUpdatedAt()        Sets the current record's "updated_at" value
 * @method ConstructorTownship setConstructor()      Sets the current record's "Constructor" value
 * @method ConstructorTownship setTownship()         Sets the current record's "Township" value
 * @method ConstructorTownship setConstructorOrder() Sets the current record's "ConstructorOrder" collection
 * 
 * @package    sistem-taxi
 * @subpackage model
 * @author     Walter Rosales
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseConstructorTownship extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('constructor_township');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('constructor_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('township_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('flag', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Constructor', array(
             'local' => 'constructor_id',
             'foreign' => 'id'));

        $this->hasOne('Township', array(
             'local' => 'township_id',
             'foreign' => 'id'));

        $this->hasMany('ConstructorOrder', array(
             'local' => 'id',
             'foreign' => 'constructor_township_id'));
    }
}
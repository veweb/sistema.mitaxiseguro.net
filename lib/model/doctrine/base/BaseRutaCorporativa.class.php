<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RutaCorporativa', 'doctrine');

/**
 * BaseRutaCorporativa
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $codigo
 * @property integer $empresa_id
 * @property integer $sucursal_id
 * @property enum $trafico
 * @property float $distancia
 * @property string $nombres1
 * @property string $nombres2
 * @property string $nombres3
 * @property string $nombres4
 * @property string $destino1
 * @property string $destino2
 * @property string $destino3
 * @property string $destino4
 * @property string $zona1
 * @property string $zona2
 * @property string $zona3
 * @property string $zona4
 * @property float $tarifa_piloto
 * @property float $tarifa_empresa
 * @property Empresa $Empresa
 * @property EmpresaSucursal $EmpresaSucursal
 * 
 * @method integer         getId()              Returns the current record's "id" value
 * @method string          getCodigo()          Returns the current record's "codigo" value
 * @method integer         getEmpresaId()       Returns the current record's "empresa_id" value
 * @method integer         getSucursalId()      Returns the current record's "sucursal_id" value
 * @method enum            getTrafico()         Returns the current record's "trafico" value
 * @method float           getDistancia()       Returns the current record's "distancia" value
 * @method string          getNombres1()        Returns the current record's "nombres1" value
 * @method string          getNombres2()        Returns the current record's "nombres2" value
 * @method string          getNombres3()        Returns the current record's "nombres3" value
 * @method string          getNombres4()        Returns the current record's "nombres4" value
 * @method string          getDestino1()        Returns the current record's "destino1" value
 * @method string          getDestino2()        Returns the current record's "destino2" value
 * @method string          getDestino3()        Returns the current record's "destino3" value
 * @method string          getDestino4()        Returns the current record's "destino4" value
 * @method string          getZona1()           Returns the current record's "zona1" value
 * @method string          getZona2()           Returns the current record's "zona2" value
 * @method string          getZona3()           Returns the current record's "zona3" value
 * @method string          getZona4()           Returns the current record's "zona4" value
 * @method float           getTarifaPiloto()    Returns the current record's "tarifa_piloto" value
 * @method float           getTarifaEmpresa()   Returns the current record's "tarifa_empresa" value
 * @method Empresa         getEmpresa()         Returns the current record's "Empresa" value
 * @method EmpresaSucursal getEmpresaSucursal() Returns the current record's "EmpresaSucursal" value
 * @method RutaCorporativa setId()              Sets the current record's "id" value
 * @method RutaCorporativa setCodigo()          Sets the current record's "codigo" value
 * @method RutaCorporativa setEmpresaId()       Sets the current record's "empresa_id" value
 * @method RutaCorporativa setSucursalId()      Sets the current record's "sucursal_id" value
 * @method RutaCorporativa setTrafico()         Sets the current record's "trafico" value
 * @method RutaCorporativa setDistancia()       Sets the current record's "distancia" value
 * @method RutaCorporativa setNombres1()        Sets the current record's "nombres1" value
 * @method RutaCorporativa setNombres2()        Sets the current record's "nombres2" value
 * @method RutaCorporativa setNombres3()        Sets the current record's "nombres3" value
 * @method RutaCorporativa setNombres4()        Sets the current record's "nombres4" value
 * @method RutaCorporativa setDestino1()        Sets the current record's "destino1" value
 * @method RutaCorporativa setDestino2()        Sets the current record's "destino2" value
 * @method RutaCorporativa setDestino3()        Sets the current record's "destino3" value
 * @method RutaCorporativa setDestino4()        Sets the current record's "destino4" value
 * @method RutaCorporativa setZona1()           Sets the current record's "zona1" value
 * @method RutaCorporativa setZona2()           Sets the current record's "zona2" value
 * @method RutaCorporativa setZona3()           Sets the current record's "zona3" value
 * @method RutaCorporativa setZona4()           Sets the current record's "zona4" value
 * @method RutaCorporativa setTarifaPiloto()    Sets the current record's "tarifa_piloto" value
 * @method RutaCorporativa setTarifaEmpresa()   Sets the current record's "tarifa_empresa" value
 * @method RutaCorporativa setEmpresa()         Sets the current record's "Empresa" value
 * @method RutaCorporativa setEmpresaSucursal() Sets the current record's "EmpresaSucursal" value
 * 
 * @package    sistem-taxi
 * @subpackage model
 * @author     Walter Rosales
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRutaCorporativa extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ruta_corporativa');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('codigo', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('empresa_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('sucursal_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('trafico', 'enum', 11, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'hora normal',
              1 => 'hora pico',
             ),
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 11,
             ));
        $this->hasColumn('distancia', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('nombres1', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('nombres2', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('nombres3', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('nombres4', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('destino1', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('destino2', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('destino3', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('destino4', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('zona1', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('zona2', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('zona3', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('zona4', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('tarifa_piloto', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('tarifa_empresa', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Empresa', array(
             'local' => 'empresa_id',
             'foreign' => 'id'));

        $this->hasOne('EmpresaSucursal', array(
             'local' => 'sucursal_id',
             'foreign' => 'id'));
    }
}
<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Empresa', 'doctrine');

/**
 * BaseEmpresa
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nombre
 * @property string $direccion
 * @property string $telefono
 * @property string $email
 * @property string $contacto
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $codigo
 * @property Doctrine_Collection $EmpleadoEmpresa
 * @property Doctrine_Collection $EmpleadoEmpresa_2
 * 
 * @method integer             getId()           Returns the current record's "id" value
 * @method string              getNombre()            Returns the current record's "nombre" value
 * @method string              getDireccion()         Returns the current record's "direccion" value
 * @method string              getTelefono()          Returns the current record's "telefono" value
 * @method string              getEmail()             Returns the current record's "email" value
 * @method string              getContacto()          Returns the current record's "contacto" value
 * @method timestamp           getCreatedAt()         Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()         Returns the current record's "updated_at" value
 * @method integer             getCodigo()            Returns the current record's "codigo" value
 * @method Doctrine_Collection getEmpleadoEmpresa()   Returns the current record's "EmpleadoEmpresa" collection
 * @method Doctrine_Collection getEmpleadoEmpresa2()  Returns the current record's "EmpleadoEmpresa_2" collection
 * @method Empresa             setId()           Sets the current record's "id" value
 * @method Empresa             setNombre()            Sets the current record's "nombre" value
 * @method Empresa             setDireccion()         Sets the current record's "direccion" value
 * @method Empresa             setTelefono()          Sets the current record's "telefono" value
 * @method Empresa             setEmail()             Sets the current record's "email" value
 * @method Empresa             setContacto()          Sets the current record's "contacto" value
 * @method Empresa             setCreatedAt()         Sets the current record's "created_at" value
 * @method Empresa             setUpdatedAt()         Sets the current record's "updated_at" value
 * @method Empresa             setCodigo()            Sets the current record's "codigo" value
 * @method Empresa             setEmpleadoEmpresa()   Sets the current record's "EmpleadoEmpresa" collection
 * @method Empresa             setEmpleadoEmpresa2()  Sets the current record's "EmpleadoEmpresa_2" collection
 * 
 * @package    sistem-taxi
 * @subpackage model
 * @author     Walter Rosales
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEmpresa extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('empresa');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('direccion', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('telefono', 'string', 8, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('email', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 40,
             ));
        $this->hasColumn('contacto', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('codigo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('EmpleadoEmpresa', array(
             'local' => 'id',
             'foreign' => 'empresa'));

        $this->hasMany('EmpleadoEmpresa as EmpleadoEmpresa_2', array(
             'local' => 'empresa',
             'foreign' => 'id'));
    }
    public function __toString() {
        parent::__toString();
        return $this->getNombre();
    }
}
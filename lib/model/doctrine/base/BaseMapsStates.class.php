<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('MapsStates', 'doctrine');

/**
 * BaseMapsStates
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $code
 * @property string $name
 * @property enum $region
 * @property string $location
 * @property integer $zip
 * @property integer $published
 * @property integer $sync
 * @property integer $version
 * @property Doctrine_Collection $MapsTowns
 * 
 * @method integer             getId()        Returns the current record's "id" value
 * @method integer             getCode()      Returns the current record's "code" value
 * @method string              getName()      Returns the current record's "name" value
 * @method enum                getRegion()    Returns the current record's "region" value
 * @method string              getLocation()  Returns the current record's "location" value
 * @method integer             getZip()       Returns the current record's "zip" value
 * @method integer             getPublished() Returns the current record's "published" value
 * @method integer             getSync()      Returns the current record's "sync" value
 * @method integer             getVersion()   Returns the current record's "version" value
 * @method Doctrine_Collection getMapsTowns() Returns the current record's "MapsTowns" collection
 * @method MapsStates          setId()        Sets the current record's "id" value
 * @method MapsStates          setCode()      Sets the current record's "code" value
 * @method MapsStates          setName()      Sets the current record's "name" value
 * @method MapsStates          setRegion()    Sets the current record's "region" value
 * @method MapsStates          setLocation()  Sets the current record's "location" value
 * @method MapsStates          setZip()       Sets the current record's "zip" value
 * @method MapsStates          setPublished() Sets the current record's "published" value
 * @method MapsStates          setSync()      Sets the current record's "sync" value
 * @method MapsStates          setVersion()   Sets the current record's "version" value
 * @method MapsStates          setMapsTowns() Sets the current record's "MapsTowns" collection
 * 
 * @package    sistem-taxi
 * @subpackage model
 * @author     Walter Rosales
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMapsStates extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('maps_states');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('code', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 128, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 128,
             ));
        $this->hasColumn('region', 'enum', 9, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'Centro',
              1 => 'Oriente',
              2 => 'Occidente',
             ),
             'primary' => false,
             'default' => 'Centro',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 9,
             ));
        $this->hasColumn('location', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('zip', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('published', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('sync', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('version', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('MapsTowns', array(
             'local' => 'id',
             'foreign' => 'state_id'));
    }
}